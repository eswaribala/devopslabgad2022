https://phoenixnap.com/kb/install-kubernetes-on-ubuntu
kubeadm init phase control-plane all --pod-network-cidr 10.244.0.0/16
kubeadm join 172.20.0.189:6443 --token gxl17d.9v6tpu6k8z6k9h3c --discovery-token-ca-cert-hash sha256:09cc5cdf7aad002cde3dfd2c9e87c0705869af5197da6f5ac6793d7a4b088d37

kubeadm join 172.20.0.189:6443 --token rrxuui.wl9zk3l4p1ywxnzf --discovery-token-ca-cert-hash sha256:09cc5cdf7aad002cde3dfd2c9e87c0705869af5197da6f5ac6793d7a4b088d37
kubeadm with --apiserver-advertise-address=Master_IP and --pod-network-cidr=10.244.0.0/16

kubeadm join 172.20.0.189:6443 --token ec0xa4.48glrgpjbz7kllo3 \
	--discovery-token-ca-cert-hash sha256:881569e33d66251b43e7ae2e3c40481184f495519200bbf4504d6d11975faf1c

sudo kubeadm reset
sudo apt-get install -qy kubelet kubectl kubeadm
sudo apt-mark hold kubelet kubeadm kubectl
sudo mkdir /etc/docker

cat <<EOF | sudo tee /etc/docker/daemon.json
{
"exec-opts": ["native.cgroupdriver=systemd"],
"log-driver": "json-file",
"log-opts": {
"max-size": "100m"
},
"storage-driver": "overlay2"
}
EOF
sudo systemctl enable docker
sudo systemctl daemon-reload
sudo systemctl restart docker
sudo kubeadm init --control-plane-endpoint kube-master:6443 --pod-network-cidr=192.168.0.0/16


kubectl version
kubectl cluster-info
kubectl cluster-info dump

kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml
kubectl apply -f dashboard-adminuser.yaml
kubectl apply -f admin-role-binding.yml
kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | sls admin-user | ForEach-Object { $_ -Split '\s+' } | Select -First 1)
kubectl proxy

http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/
kubectl apply -f mysql-pv.yaml
kubectl get pv
kubectl get pvc
kubectl apply -f mysql-deployment.yaml
kubectl get pods
kubectl get svc
kubectl get deploy
kubectl run -it --rm --image=mysql --restart=Never mysql-client -- mysql -h mysql -ppassword
kubectl exec -it mongo-app-7559754fbf-n7mx4 /bin/bash
kubectl apply -f deployment-v7.yml
kubectl expose deployment --port 7070 customerapp --type=LoadBalancer --name=customerservicev1
#external ip pending then
sudo microk8s kubectl patch svc traderservicev1  -p '{"spec": {"type": "LoadBalancer", "externalIPs":["172.22.0.1"]}}'


kubectl port-forward svc/customerservicev1 8060:7070
kubectl scale --replicas=1 deployment customerapp

az network public-ip create --resource-group  mc_vebgroup_vebcluster_southindia  --name Pixel-AKS-PIP --allocation-method static


kubectl autoscale deployment customerapp --min=1 --max=4 --cpu-percent=20
